replicaCount: 1

image:
  repository: jatm80/expiring-links
  pullPolicy: IfNotPresent
  tag: "0.5.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

env:
  base_url: "https://expiring-links.example.local"
  redis_url: "redis://:@expiring-links-redis-master:6379/1"

redis:
  enabled: true
  # Example - values for Bitnami sub-chart
  architecture: standalone
  auth:
    enabled: false
  master:
    service:
      ports:
        redis: 6379
    persistence:
      storageClass: nfs-csi

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "1073741824"
  hosts:
    - host: expiring-links.example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: expiring-links-tls
     hosts:
       - expiring-links.example.local

resources:
  limits:
    cpu: 300m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 90

volumes: []
volumeMounts: []
nodeSelector: {}

tolerations: []

affinity: {}
